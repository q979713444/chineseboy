package com.example.testpic;

import java.util.List;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.graphics.Bitmap;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.Toast;

import com.example.testpic.BitmapCache.ImageCallback;

public class ImageGridAdapter extends BaseAdapter{
  final String TAG = getClass().getSimpleName();
  Activity act;
  List<ImageItem> dataList;
  BitmapCache cache;
  private Handler mHandler;
  private int selectTotal=0;
  ImageCallback callback = new ImageCallback() {
    @Override
    public void imageLoad(ImageView imageView, Bitmap bitmap, Object... params) {
      if (imageView != null && bitmap != null) {
        String url = (String) params[0];
        if (url != null && url.equals((String) imageView.getTag())) {
          ((ImageView) imageView).setImageBitmap(bitmap);
        }else{
          Log.e(TAG, "callback, bmp not match");
        }
      }else{
        Log.e(TAG, "callback, bmp null");
      }
    }
  };

  public ImageGridAdapter(Activity act, List<ImageItem> list,Handler mHandler){
    this.act = act;
    dataList = list;
    cache = new BitmapCache();
    this.mHandler=mHandler;
  }

  @Override
  public int getCount() {
    int count = 0;
    if(dataList!=null){
      count = dataList.size();
    }
    return count;
  }

  @Override
  public Object getItem(int position) {
    // TODO Auto-generated method stub
    return null;
  }

  @Override
  public long getItemId(int position) {
    // TODO Auto-generated method stub
    return position;
  }


  class Holder{
    private ImageView iv;
    private ImageView selected;
  }

  @Override
  public View getView(final int position, View convertView, ViewGroup parent) {
    final Holder holder;
    if(convertView == null){
      holder = new Holder();
      convertView = View.inflate(act, R.layout.item_image_grid, null);
      holder.iv = (ImageView)convertView.findViewById(R.id.image);
      holder.selected = (ImageView)convertView.findViewById(R.id.isselected);
      convertView.setTag(holder);
    }else{
      holder = (Holder) convertView.getTag();
    }
    final ImageItem item = dataList.get(position);
    holder.iv.setTag(item.imagePath);
    cache.displayBmp(holder.iv, item.thumbnailPath, item.imagePath, callback);
    if(item.isSelected){
      holder.selected.setImageResource(R.drawable.data_select);
    }else{
      holder.selected.setImageResource(R.drawable.data_select_not);
    }
    holder.selected.setOnClickListener(new OnClickListener() {

      @Override
      public void onClick(View v) {
        Toast.makeText(act, dataList.get(position).imagePath, 1000).show();
        if (selectTotal<9) {
          item.isSelected = !item.isSelected;
          if(item.isSelected){
            holder.selected.setImageResource(R.drawable.data_select);
            selectTotal++;
            Toast.makeText(act, ">>+"+selectTotal, 1000).show();
          }else if (!item.isSelected) {
            holder.selected.setImageResource(R.drawable.data_select_not);
            selectTotal--;
            Toast.makeText(act, ">>-"+selectTotal, 1000).show();
          }
        }else if (selectTotal>=9) {
          if (item.isSelected==true) {
            item.isSelected = !item.isSelected;
            holder.selected.setImageResource(R.drawable.data_select_not);
            selectTotal--;
            Toast.makeText(act, ">>-"+selectTotal, 1000).show();
          }else {
            Message message=Message.obtain(mHandler, 0);
            message.sendToTarget();
          }
        } 
      }
      
    });
       
    return convertView;
  }

}
